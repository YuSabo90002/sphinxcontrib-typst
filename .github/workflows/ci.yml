name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run tests with tox
        run: uv run tox -e py${{ matrix.python-version }}

      - name: Upload test results
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            .pytest_cache
            test-results/

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run lint with tox
        run: uv run tox -e lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run type check with tox
        run: uv run tox -e type

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run coverage with tox
        run: uv run tox -e cov -- --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v5
        with:
          name: coverage-report
          path: htmlcov/

  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Build package
        run: uv build

      - name: Check package
        run: |
          uv sync --extra dev
          uv run twine check dist/*

      - name: Upload package artifacts
        uses: actions/upload-artifact@v5
        with:
          name: dist
          path: dist/

  integration:
    name: Integration Test - ${{ matrix.example }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [basic, advanced]

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install package and dependencies
        run: uv sync

      - name: Build ${{ matrix.example }} example
        working-directory: examples/${{ matrix.example }}
        run: |
          uv run sphinx-build -b typst . _build/typst
          ls -la _build/typst/

      - name: Upload example output
        uses: actions/upload-artifact@v5
        with:
          name: example-${{ matrix.example }}-output
          path: examples/${{ matrix.example }}/_build/typst/
